---
name: $(Build.DefinitionName)-$(date:yyyyMMdd)$(rev:.r)

trigger: none

# parameters are typed with defaults so they are correctly populated, you will get a choice in the GUI to edit these, but you should keep all changes as code.
parameters:

  - name: SHORTHAND_ENVIRONMENT_NAME
    default: uat
    displayName: "What is the shorthand name for this environment?"
    type: string
    values:
      - dev
      - poc
      - mvp
      - tst
      - uat
      - ppd
      - prd

  - name: SHORTHAND_PROJECT_NAME
    type: string
    default: "ldo"
    displayName: "Shorthand Project e.g. lbdo for libredevops"

  - name: SHORTHAND_LOCATION_NAME
    type: string
    default: "euw"
    displayName: "3 character location name, e.g., uks, ukw, euw"

  - name: ADD_CLIENT_IP_TO_NSG
    type: boolean
    default: true
    displayName: Whether your client IP should be added to NSG, if this is set to true, NSG_ID must also be set

  - name: NSG_ID
    type: string
    default: "/subscriptions/66d5a5a0-559c-4049-a1b0-7bfd981ed1c7/resourceGroups/rg-ldo-euw-uat-build/providers/Microsoft.Network/networkSecurityGroups/nsg-ldo-euw-uat-01"
    displayName: The ID of the NSG to add client IP to.

  - name: PACKER_PATH
    type: string
    default: "packer/windows/10"
    displayName: "What is the path to your packer code?"

  - name: PACKER_FILE_NAME
    type: string
    default: "packer.pkr.hcl"
    displayName: "What is the name of your packer file?"

  - name: VARIABLE_GROUP_NAME
    type: string
    default: "svp-kv-ldo-euw-uat-mgt-01"
    displayName: "Enter the variable group which contains your authentication information"


# Declare variable group to pass variables to parameters, in this case, a libre-devops keyvault which is using a service principle for authentication
variables:
  - group: ${{ parameters.VARIABLE_GROUP_NAME }}

# Sets what repos need cloned, for example, a library repo for modules and a poly-repo for target code
resources:
  repositories:

  - repository: packer-azdo-pipeline-template
    type: github
    endpoint: github_service_connection
    name: libre-devops/packer-azdo-pipeline-template
    ref: main

# You may wish to use a separate or self-hosted agent per job, by default, all jobs will inherit stage agent
pool:
  name: Azure Pipelines
  vmImage: ubuntu-latest

# Sets stage so that multiple stages can be used if needed, as it stands, only 1 stage is expected and is thus passed as a parameter
stages:
  - stage: "${{ parameters.SHORTHAND_ENVIRONMENT_NAME }}"
    displayName: "${{ parameters.SHORTHAND_ENVIRONMENT_NAME }} Stage"
    jobs:
      - job: Packer_Build
        workspace:
          clean: all
        displayName: Packer Build
        steps:

          # Declare the repos needed from the resources list
          - checkout: self

          # Remotely fetch pipeline template, in this case, I am using one in my development repo.
          - template: /.azurepipelines/.templates/packer-cicd-template.yml@packer-azdo-pipeline-template
            parameters:
              SHORTHAND_PROJECT_NAME: ${{ parameters.SHORTHAND_PROJECT_NAME }} # Parameters entered in YAML
              SHORTHAND_ENVIRONMENT_NAME: ${{ parameters.SHORTHAND_ENVIRONMENT_NAME }}
              SHORTHAND_LOCATION_NAME: ${{ parameters.SHORTHAND_LOCATION_NAME }}
              PACKER_PATH: ${{ parameters.PACKER_PATH }}
              PACKER_FILE_NAME: ${{ parameters.PACKER_FILE_NAME }}
              AZURE_TARGET_CLIENT_ID: $(SpokeSvpClientId)
              AZURE_TARGET_CLIENT_SECRET: $(SpokeSvpClientSecret)
              AZURE_TARGET_TENANT_ID: $(SpokeTenantId)
              AZURE_TARGET_SUBSCRIPTION_ID: $(SpokeSubID)
              ADD_CLIENT_IP_TO_NSG: ${{ parameters.ADD_CLIENT_IP_TO_NSG }}
              NSG_ID: ${{ parameters.NSG_ID }}
